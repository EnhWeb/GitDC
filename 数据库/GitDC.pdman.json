{
  "modules": [
    {
      "name": "User",
      "chnname": "用户",
      "entities": [
        {
          "title": "DC_Users",
          "fields": [
            {
              "name": "ID",
              "type": "BigInt",
              "remark": "",
              "chnname": "编号",
              "autoIncrement": true,
              "pk": true,
              "notNull": true
            },
            {
              "name": "Name",
              "type": "String20",
              "remark": "",
              "chnname": "用户名"
            },
            {
              "name": "NickName",
              "type": "String20",
              "remark": "",
              "chnname": "昵称"
            },
            {
              "name": "Email",
              "type": "String50",
              "remark": "",
              "chnname": "邮箱"
            },
            {
              "name": "PasswordVersion",
              "type": "smallint",
              "remark": "",
              "chnname": "密码版本"
            },
            {
              "name": "Password",
              "type": "String32",
              "remark": "",
              "chnname": "密码"
            },
            {
              "name": "Salt",
              "type": "String6",
              "remark": "",
              "chnname": "盐值"
            },
            {
              "name": "Description",
              "type": "String500",
              "remark": "",
              "chnname": "描述"
            },
            {
              "name": "IsSystemAdministrator",
              "type": "DingBoolean",
              "remark": "",
              "chnname": "是否系统管理员"
            },
            {
              "name": "CreationTime",
              "type": "DateTime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": false
            },
            {
              "name": "CreatId",
              "type": "Integer",
              "remark": "",
              "chnname": "创建人编号",
              "notNull": false
            },
            {
              "name": "LastModifiTime",
              "type": "DateTime",
              "remark": "",
              "chnname": "最后修改时间"
            },
            {
              "name": "LastModifiId",
              "type": "Integer",
              "remark": "",
              "chnname": "最后修改人编号"
            },
            {
              "name": "IsDeleted",
              "type": "DingBoolean",
              "remark": "软删除，数据不会被物理删除",
              "chnname": "是否删除",
              "notNull": true,
              "defaultValue": ""
            },
            {
              "name": "Version",
              "type": "DingVersion",
              "remark": "处理并发问题",
              "chnname": "乐观锁"
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "用户名"
        }
      ],
      "graphCanvas": {
        "nodes": [],
        "edges": []
      },
      "associations": []
    },
    {
      "name": "WebHook",
      "chnname": "网络勾子",
      "entities": [
        {
          "title": "WH_Middleware",
          "fields": [
            {
              "name": "Id",
              "type": "DingNumber",
              "remark": "",
              "chnname": "编号",
              "pk": true,
              "notNull": true
            },
            {
              "name": "Name",
              "type": "String50",
              "remark": "",
              "chnname": "名称",
              "notNull": false
            },
            {
              "name": "Summary",
              "type": "String500",
              "remark": "",
              "chnname": "介绍"
            },
            {
              "name": "Token",
              "type": "String100",
              "remark": "",
              "chnname": "令牌",
              "notNull": true
            },
            {
              "name": "Source",
              "type": "smallint",
              "remark": "1.腾讯云开发者中心项目，2为禅道，3为码云，4为Gogs，5为Gitea",
              "chnname": "来源",
              "notNull": true
            },
            {
              "name": "Push",
              "type": "smallint",
              "remark": "1.钉钉，2为企业微信",
              "chnname": "推送",
              "notNull": true
            },
            {
              "name": "PushUrl",
              "type": "String250",
              "remark": "",
              "chnname": "推送Url",
              "notNull": true
            },
            {
              "name": "PushToken",
              "type": "String100",
              "remark": "",
              "chnname": "推送令牌"
            },
            {
              "name": "CreationTime",
              "type": "DateTime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": false
            },
            {
              "name": "CreatId",
              "type": "Integer",
              "remark": "",
              "chnname": "创建人编号",
              "notNull": false
            },
            {
              "name": "LastModifiTime",
              "type": "DateTime",
              "remark": "",
              "chnname": "最后修改时间"
            },
            {
              "name": "LastModifiId",
              "type": "Integer",
              "remark": "",
              "chnname": "最后修改人编号"
            },
            {
              "name": "IsDeleted",
              "type": "DingBoolean",
              "remark": "软删除，数据不会被物理删除",
              "chnname": "是否删除",
              "notNull": true,
              "defaultValue": ""
            },
            {
              "name": "Version",
              "type": "DingVersion",
              "remark": "处理并发问题",
              "chnname": "乐观锁"
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "网络勾子中转表"
        },
        {
          "title": "WH_Logs",
          "fields": [
            {
              "name": "Id",
              "type": "DingNumber",
              "remark": "",
              "chnname": "编号",
              "pk": true,
              "notNull": true
            },
            {
              "name": "WhId",
              "type": "String36",
              "remark": "",
              "chnname": "勾子编号"
            },
            {
              "name": "WHTypes",
              "type": "DingBoolean",
              "remark": "是为中转，否为非中转",
              "chnname": "类型",
              "notNull": true
            },
            {
              "name": "RequestTop",
              "type": "String2000",
              "remark": "",
              "chnname": "请求头部"
            },
            {
              "name": "Content",
              "type": "LongText",
              "remark": "",
              "chnname": "推送内容"
            },
            {
              "name": "ResponseTop",
              "type": "String2000",
              "remark": "",
              "chnname": "响应头部"
            },
            {
              "name": "ResponseContent",
              "type": "Text",
              "remark": "",
              "chnname": "响应内容"
            },
            {
              "name": "ResponseBody",
              "type": "String2000",
              "remark": "",
              "chnname": "响应结果"
            },
            {
              "name": "CreationTime",
              "type": "DateTime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": false
            },
            {
              "name": "IsDeleted",
              "type": "DingBoolean",
              "remark": "软删除，数据不会被物理删除",
              "chnname": "是否删除",
              "notNull": true,
              "defaultValue": ""
            },
            {
              "name": "Version",
              "type": "DingVersion",
              "remark": "处理并发问题",
              "chnname": "乐观锁"
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "网络勾子推送内容日志"
        }
      ],
      "graphCanvas": {
        "nodes": [],
        "edges": []
      },
      "associations": []
    },
    {
      "name": "Repositories",
      "chnname": "源码仓库",
      "entities": [
        {
          "title": "DC_Repositories",
          "fields": [
            {
              "name": "Id",
              "type": "DingNumber",
              "remark": "",
              "chnname": "编号",
              "pk": true,
              "notNull": true
            },
            {
              "name": "DefaultBranch",
              "type": "String100",
              "remark": "",
              "chnname": "默认分支"
            },
            {
              "name": "Description",
              "type": "String512",
              "remark": "",
              "chnname": "描述"
            },
            {
              "name": "IsMirror",
              "type": "DingBoolean",
              "remark": "",
              "chnname": "是否镜像"
            },
            {
              "name": "IsPrivate",
              "type": "DingBoolean",
              "remark": "",
              "chnname": "是否私人"
            },
            {
              "name": "Name",
              "type": "String250",
              "remark": "",
              "chnname": "项目名称"
            },
            {
              "name": "NumIssues",
              "type": "Integer",
              "remark": "",
              "chnname": "问题数量"
            },
            {
              "name": "NumOpenIssues",
              "type": "Integer",
              "remark": "",
              "chnname": "未关闭的问题数量"
            },
            {
              "name": "NumOpenPulls",
              "type": "Integer",
              "remark": "",
              "chnname": "未关闭的合并请求数量"
            },
            {
              "name": "NumPulls",
              "type": "Integer",
              "remark": "",
              "chnname": "合并请求数量"
            },
            {
              "name": "Size",
              "type": "Double",
              "remark": "",
              "chnname": "大小"
            },
            {
              "name": "UserID",
              "type": "BigInt",
              "remark": "",
              "chnname": "归属用户"
            },
            {
              "name": "UserName",
              "type": "String50",
              "remark": "",
              "chnname": "用户名称"
            },
            {
              "name": "CreationTime",
              "type": "DateTime",
              "remark": "",
              "chnname": "创建时间",
              "notNull": false
            },
            {
              "name": "LastModifiTime",
              "type": "DateTime",
              "remark": "",
              "chnname": "最后修改时间"
            },
            {
              "name": "IsDeleted",
              "type": "DingBoolean",
              "remark": "软删除，数据不会被物理删除",
              "chnname": "是否删除",
              "notNull": true,
              "defaultValue": ""
            },
            {
              "name": "Version",
              "type": "DingVersion",
              "remark": "处理并发问题",
              "chnname": "乐观锁"
            }
          ],
          "indexs": [],
          "headers": [
            {
              "fieldName": "chnname",
              "relationNoShow": false
            },
            {
              "fieldName": "name",
              "relationNoShow": false
            },
            {
              "fieldName": "type",
              "relationNoShow": false
            },
            {
              "fieldName": "dataType",
              "relationNoShow": true
            },
            {
              "fieldName": "remark",
              "relationNoShow": true
            },
            {
              "fieldName": "pk",
              "relationNoShow": false
            },
            {
              "fieldName": "notNull",
              "relationNoShow": true
            },
            {
              "fieldName": "autoIncrement",
              "relationNoShow": true
            },
            {
              "fieldName": "defaultValue",
              "relationNoShow": true
            },
            {
              "fieldName": "relationNoShow",
              "relationNoShow": true
            },
            {
              "fieldName": "uiHint",
              "relationNoShow": true
            }
          ],
          "chnname": "仓库表"
        }
      ],
      "graphCanvas": {
        "nodes": [],
        "edges": []
      },
      "associations": []
    }
  ],
  "dataTypeDomains": {
    "datatype": [
      {
        "name": "默认字串",
        "code": "DefaultString",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(32)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(32)"
          },
          "SQLServer": {
            "type": "NVARCHAR(32)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(32)"
          }
        }
      },
      {
        "name": "标识号",
        "code": "IdOrKey",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "ORACLE": {
            "type": "VARCHAR2(32)"
          },
          "MYSQL": {
            "type": "VARCHAR(32)"
          },
          "SQLServer": {
            "type": "VARCHAR(32)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(32)"
          }
        }
      },
      {
        "name": "标识号-长",
        "code": "LongKey",
        "apply": {
          "MYSQL": {
            "type": "VARCHAR(64)"
          },
          "ORACLE": {
            "type": "VARCHAR2(64)"
          },
          "JAVA": {
            "type": "String"
          },
          "SQLServer": {
            "type": "VARCHAR(64)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(64)"
          }
        }
      },
      {
        "name": "名称",
        "code": "Name",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(128)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(128)"
          },
          "SQLServer": {
            "type": "NVARCHAR(128)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(128)"
          }
        }
      },
      {
        "name": "备注说明",
        "code": "Intro",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(512)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(512)"
          },
          "SQLServer": {
            "type": "NVARCHAR(512)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(512)"
          }
        }
      },
      {
        "name": "字串-短",
        "code": "ShortString",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(128)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(128)"
          },
          "SQLServer": {
            "type": "NVARCHAR(128)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(128)"
          }
        }
      },
      {
        "name": "字串-中",
        "code": "MiddleString",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(1024)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(1024)"
          },
          "SQLServer": {
            "type": "NVARCHAR(1024)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(1024)"
          }
        }
      },
      {
        "name": "字串-长",
        "code": "LongString",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "ORACLE": {
            "type": "NVARCHAR2(3072)"
          },
          "MYSQL": {
            "type": "VARCHAR(3072)"
          },
          "SQLServer": {
            "type": "NVARCHAR(3072)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(3072)"
          }
        }
      },
      {
        "name": "文本",
        "code": "Text",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "TEXT"
          },
          "ORACLE": {
            "type": "CLOB"
          },
          "SQLServer": {
            "type": "TEXT"
          },
          "PostgreSQL": {
            "type": "TEXT"
          }
        }
      },
      {
        "name": "长文本",
        "code": "LongText",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "LONGTEXT"
          },
          "ORACLE": {
            "type": "CLOB"
          },
          "SQLServer": {
            "type": "NTEXT"
          },
          "PostgreSQL": {
            "type": "TEXT"
          }
        }
      },
      {
        "name": "小数",
        "code": "Double",
        "apply": {
          "JAVA": {
            "type": "Double"
          },
          "MYSQL": {
            "type": "DECIMAL(32,10)"
          },
          "ORACLE": {
            "type": "NUMBER(32,10)"
          },
          "SQLServer": {
            "type": "DECIMAL(32,10)"
          },
          "PostgreSQL": {
            "type": "DECIMAL(32,10)"
          }
        }
      },
      {
        "name": "比例",
        "code": "Ratio",
        "apply": {
          "MYSQL": {
            "type": "DECIMAL(4,2)"
          },
          "JAVA": {
            "type": "Double"
          },
          "ORACLE": {
            "type": "NUMBER(4,2)"
          },
          "SQLServer": {
            "type": "DECIMAL(4,2)"
          },
          "PostgreSQL": {
            "type": "DECIMAL(4,2)"
          }
        }
      },
      {
        "name": "整数",
        "code": "Integer",
        "apply": {
          "JAVA": {
            "type": "Integer"
          },
          "MYSQL": {
            "type": "INT"
          },
          "ORACLE": {
            "type": "INT"
          },
          "SQLServer": {
            "type": "INT"
          },
          "PostgreSQL": {
            "type": "INT"
          }
        }
      },
      {
        "name": "大整数",
        "code": "BigInt",
        "apply": {
          "MYSQL": {
            "type": "BIGINT"
          },
          "JAVA": {
            "type": "Long"
          },
          "ORACLE": {
            "type": "NUMBER"
          },
          "SQLServer": {
            "type": "BIGINT"
          },
          "PostgreSQL": {
            "type": "BIGINT"
          }
        }
      },
      {
        "name": "金额",
        "code": "Money",
        "apply": {
          "JAVA": {
            "type": "Double"
          },
          "MYSQL": {
            "type": "DECIMAL(32,8)"
          },
          "ORACLE": {
            "type": "NUMBER(32,8)"
          },
          "SQLServer": {
            "type": "DECIMAL(32,8)"
          },
          "PostgreSQL": {
            "type": "DECIMAL(32,8)"
          }
        }
      },
      {
        "name": "是否",
        "code": "YesNo",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(1)"
          },
          "ORACLE": {
            "type": "VARCHAR2(1)"
          },
          "SQLServer": {
            "type": "VARCHAR(1)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(1)"
          }
        }
      },
      {
        "name": "数据字典",
        "code": "Dict",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(32)"
          },
          "ORACLE": {
            "type": "VARCHAR2(32)"
          },
          "SQLServer": {
            "type": "VARCHAR(32)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(32)"
          }
        }
      },
      {
        "name": "日期",
        "code": "Date",
        "apply": {
          "JAVA": {
            "type": "Date"
          },
          "MYSQL": {
            "type": "DATE"
          },
          "ORACLE": {
            "type": "DATE"
          },
          "SQLServer": {
            "type": "DATE"
          },
          "PostgreSQL": {
            "type": "DATE"
          }
        }
      },
      {
        "name": "日期时间",
        "code": "DateTime",
        "apply": {
          "JAVA": {
            "type": "Date"
          },
          "MYSQL": {
            "type": "DATETIME"
          },
          "ORACLE": {
            "type": "DATE"
          },
          "SQLServer": {
            "type": "DATE"
          },
          "PostgreSQL": {
            "type": "DATE"
          }
        }
      },
      {
        "name": "单字符",
        "code": "Char",
        "apply": {
          "MYSQL": {
            "type": "CHAR(1)"
          },
          "ORACLE": {
            "type": "CHAR(1)"
          },
          "JAVA": {
            "type": "String"
          },
          "SQLServer": {
            "type": "CHAR(1)"
          },
          "PostgreSQL": {
            "type": "CHAR(1)"
          }
        }
      },
      {
        "name": "Ding版本号",
        "code": "DingVersion",
        "apply": {
          "SQLServer": {
            "type": "timestamp"
          },
          "PostgreSQL": {
            "type": "BYTEA"
          },
          "MYSQL": {
            "type": "tinyblob"
          }
        }
      },
      {
        "name": "Ding标识",
        "code": "DingNumber",
        "apply": {
          "MYSQL": {
            "type": "char(36)"
          },
          "PostgreSQL": {
            "type": "UUID"
          },
          "SQLServer": {
            "type": "uniqueidentifier"
          }
        }
      },
      {
        "name": "Ding是否",
        "code": "DingBoolean",
        "apply": {
          "MYSQL": {
            "type": "bool"
          },
          "PostgreSQL": {
            "type": "bool"
          },
          "SQLServer": {
            "type": "bit"
          }
        }
      },
      {
        "name": "字串6",
        "code": "String6",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(6)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(6)"
          },
          "SQLServer": {
            "type": "NVARCHAR(6)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(6)"
          }
        }
      },
      {
        "name": "字串10",
        "code": "String10",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(10)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(10)"
          },
          "SQLServer": {
            "type": "NVARCHAR(10)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(10)"
          }
        }
      },
      {
        "name": "字串11",
        "code": "String11",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(11)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(11)"
          },
          "SQLServer": {
            "type": "NVARCHAR(11)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(11)"
          }
        }
      },
      {
        "name": "字串15",
        "code": "String15",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(15)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(15)"
          },
          "SQLServer": {
            "type": "NVARCHAR(15)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(15)"
          }
        }
      },
      {
        "name": "字串16",
        "code": "String16",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(16)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(16)"
          },
          "SQLServer": {
            "type": "NVARCHAR(16)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(16)"
          }
        }
      },
      {
        "name": "字串18",
        "code": "String18",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(18)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(18)"
          },
          "SQLServer": {
            "type": "NVARCHAR(18)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(18)"
          }
        }
      },
      {
        "name": "字串20",
        "code": "String20",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(20)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(20)"
          },
          "SQLServer": {
            "type": "NVARCHAR(20)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(20)"
          }
        }
      },
      {
        "name": "字串30",
        "code": "String30",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(30)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(30)"
          },
          "SQLServer": {
            "type": "NVARCHAR(30)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(30)"
          }
        }
      },
      {
        "name": "字串32",
        "code": "String32",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(32)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(32)"
          },
          "SQLServer": {
            "type": "NVARCHAR(32)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(32)"
          }
        }
      },
      {
        "name": "字串36",
        "code": "String36",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(36)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(36)"
          },
          "SQLServer": {
            "type": "NVARCHAR(36)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(36)"
          }
        }
      },
      {
        "name": "字串50",
        "code": "String50",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(50)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(50)"
          },
          "SQLServer": {
            "type": "NVARCHAR(50)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(50)"
          }
        }
      },
      {
        "name": "字串64",
        "code": "String64",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(64)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(64)"
          },
          "SQLServer": {
            "type": "NVARCHAR(64)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(64)"
          }
        }
      },
      {
        "name": "字串100",
        "code": "String100",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(100)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(100)"
          },
          "SQLServer": {
            "type": "NVARCHAR(100)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(100)"
          }
        }
      },
      {
        "name": "字串150",
        "code": "String150",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(150)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(150)"
          },
          "SQLServer": {
            "type": "NVARCHAR(150)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(150)"
          }
        }
      },
      {
        "name": "字串200",
        "code": "String200",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(200)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(200)"
          },
          "SQLServer": {
            "type": "NVARCHAR(200)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(200)"
          }
        }
      },
      {
        "name": "字串250",
        "code": "String250",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(250)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(250)"
          },
          "SQLServer": {
            "type": "NVARCHAR(250)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(250)"
          }
        }
      },
      {
        "name": "字串255",
        "code": "String255",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(255)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(255)"
          },
          "SQLServer": {
            "type": "NVARCHAR(255)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(255)"
          }
        }
      },
      {
        "name": "字串300",
        "code": "String300",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(300)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(300)"
          },
          "SQLServer": {
            "type": "NVARCHAR(300)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(300)"
          }
        }
      },
      {
        "name": "字串500",
        "code": "String500",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(500)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(500)"
          },
          "SQLServer": {
            "type": "NVARCHAR(500)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(500)"
          }
        }
      },
      {
        "name": "字串512",
        "code": "String512",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(512)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(512)"
          },
          "SQLServer": {
            "type": "NVARCHAR(512)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(512)"
          }
        }
      },
      {
        "name": "字串1000",
        "code": "String1000",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(1000)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(1000)"
          },
          "SQLServer": {
            "type": "NVARCHAR(1000)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(1000)"
          }
        }
      },
      {
        "name": "字串2000",
        "code": "String2000",
        "apply": {
          "JAVA": {
            "type": "String"
          },
          "MYSQL": {
            "type": "VARCHAR(2000)"
          },
          "ORACLE": {
            "type": "NVARCHAR2(2000)"
          },
          "SQLServer": {
            "type": "NVARCHAR(2000)"
          },
          "PostgreSQL": {
            "type": "VARCHAR(2000)"
          }
        }
      },
      {
        "name": "tinyint",
        "code": "tinyint",
        "apply": {
          "JAVA": {
            "type": "tinyint"
          },
          "MYSQL": {
            "type": "tinyint"
          },
          "ORACLE": {
            "type": "tinyint"
          },
          "SQLServer": {
            "type": "tinyint"
          },
          "PostgreSQL": {
            "type": "tinyint"
          }
        }
      },
      {
        "name": "smallint",
        "code": "smallint",
        "apply": {
          "JAVA": {
            "type": "smallint"
          },
          "MYSQL": {
            "type": "smallint"
          },
          "ORACLE": {
            "type": "smallint"
          },
          "SQLServer": {
            "type": "smallint"
          },
          "PostgreSQL": {
            "type": "smallint"
          }
        }
      }
    ],
    "database": [
      {
        "code": "MYSQL",
        "template": "DROP TABLE {{=it.entity.title}};\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.pk ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}'",
        "fileShow": true,
        "defaultDatabase": true,
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,' ')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,' ') }}';{{=it.separator}}\n$blankline\n",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/",
        "rebuildTableTemplate": "create table PDMAN_UP_{{=it.oldEntity.title}}\nas select * from {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}\n{{~it.newEntity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.newEntity.chnname,it.newEntity.remark,';') }}';{{=it.separator}}\n$blankline\n\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\ninsert into {{=it.newEntity.title}}(\n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\n) \nselect \n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\nfrom PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n{{~it.newEntity.indexs:index}}\nALTER TABLE {{=it.newEntity.title}} ADD {{? index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=index.name}}({{=it.func.join(...index.fields,',')}});{{=it.separator}}\n{{~}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.pk}}PRIMARY KEY{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}} {{? it.field.addAfter}}AFTER {{=it.field.addAfter}}{{?}};{{=it.separator}}",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY COLUMN {{=it.field.name}} {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}};{{=it.separator}}",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP {{=it.field.name}};{{=it.separator}}",
        "deleteIndexTemplate": "ALTER TABLE {{=it.entity.title}} DROP INDEX {{=it.index.name}};{{=it.separator}}",
        "createIndexTemplate": "ALTER TABLE {{=it.entity.title}} ADD {{? it.index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=it.index.name}}({{=it.func.join(...it.index.fields,',')}});{{=it.separator}}",
        "updateTableComment": "ALTER TABLE {{=it.entity.title}} COMMENT '{{=it.entity.chnname}}';{{=it.separator}}"
      },
      {
        "code": "ORACLE",
        "template": "DROP TABLE {{=it.entity.title}};{{=it.separator}}\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}  {{= field.pk ? 'NOT NULL' : '' }} {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\nCOMMENT ON TABLE {{=it.entity.title}} IS '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}';{{=it.separator}}\n{{~it.entity.fields:field:index}}\nCOMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS '{{=it.func.join(field.chnname,field.remark,';')}}';{{=it.separator}}\n{{~}}",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\n{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~}}",
        "deleteTableTemplate": "DROP TABLE {{=it.entity.title}};{{=it.separator}}/*SkipError*/\r\n$blankline",
        "rebuildTableTemplate": "CREATE TABLE PDMAN_UP_{{=it.oldEntity.title}}\nAS SELECT * FROM {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\nDROP TABLE {{=it.oldEntity.title}};{{=it.separator}}\n$blankline\nCREATE TABLE {{=it.newEntity.title}}(\n{{ pkList = [] ; }}{{~it.newEntity.fields:field:index}}{{? field.pk }}{{ pkList.push(field.name) }}{{?}}    {{=field.name}} {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}{{? pkList.length >0 }}    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}}){{?}}\n);{{=it.separator}}\n$blankline\n{{? it.newEntity.chnname || it.newEntity.remark}}COMMENT ON TABLE {{=it.newEntity.title}} IS {{? it.newEntity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.newEntity.chnname}}'{{?}};{{?}}{{=it.separator}}\n{{~it.newEntity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN {{=it.newEntity.title}}.{{=field.name}} IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{?}}{{=it.separator}}\n{{~}}\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\n$blankline\nINSERT INTO {{=it.newEntity.title}}(\n{{~sameCols:field:index}}   {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}) \nSELECT\n{{~sameCols:field:index}}   {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}FROM PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n\nDROP TABLE PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n{{~it.newEntity.indexs:index}}\nCREATE{{? index.isUnique}} UNIQUE{{?}} INDEX {{=index.name}} ON {{=it.newEntity.title}}({{=it.func.join(index.fields,',')}});{{=it.separator}}\n{{~}}",
        "createFieldTemplate": "ALTER TABLE {{=it.entity.title}} ADD({{=it.field.name}} {{=it.field.type}}{{? it.field.defaultValue}} DEFAULT {{=it.field.defaultValue}}{{?}}{{? it.field.notNull}} NOT NULL{{?}});{{=it.separator}}\r\n{{? it.field.chnname || it.field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=it.field.name}} IS {{? it.field.remark}}'{{=it.field.remark}}'{{??}}'{{=it.field.chnname}}'{{?}};{{=it.separator}}{{?}}\r\n$blankline",
        "updateFieldTemplate": "ALTER TABLE {{=it.entity.title}} MODIFY({{=it.field.name}} {{=it.field.type}}{{? it.field.defaultValue}} DEFAULT {{=it.field.defaultValue}}{{?}}{{? it.field.notNull}} NOT NULL{{?}});{{=it.separator}}\r\n{{? it.field.chnname || it.field.remark}}COMMENT ON COLUMN {{=it.entity.title}}.{{=it.field.name}} IS {{? it.field.remark}}'{{=it.field.remark}}'{{??}}'{{=it.field.chnname}}'{{?}};{{=it.separator}}{{=it.separator}}{{?}}\r\n$blankline",
        "deleteFieldTemplate": "ALTER TABLE {{=it.entity.title}} DROP({{=it.field.name}});{{=it.separator}}\r\n$blankline",
        "deleteIndexTemplate": "DROP INDEX {{=it.entity.title}}.{{=it.index.name}};{{=it.separator}}\r\n$blankline",
        "createIndexTemplate": "CREATE{{? it.index.isUnique}} UNIQUE{{?}} INDEX {{=it.index.name}} ON {{=it.entity.title}}({{=it.func.join(it.index.fields,',')}});{{=it.separator}}\r\n$blankline",
        "updateTableComment": "{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE {{=it.entity.title}} IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\r\n$blankline"
      },
      {
        "code": "SQLServer",
        "createTableTemplate": "CREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'IDENTITY(1,1)' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}  {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    CONSTRAINT PK_{{=it.entity.title}} PRIMARY KEY CLUSTERED ({{~pkList:pkName:i}}{{= pkName }} ASC {{= i<pkList.length-1 ? ',' : '' }}{{~}}) ON [PRIMARY] \n{{?}}\n) ;{{=it.separator}}\n\n$blankline\nEXECUTE sp_addextendedproperty N'MS_Description', '{{= it.entity.chnname || it.entity.remark}}', N'user', N'dbo', N'table', N'{{=it.entity.title}}', NULL, NULL;{{=it.separator}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}EXECUTE sp_addextendedproperty N'MS_Description', {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}}, N'user', N'dbo', N'table', N'{{=it.entity.title}}', N'column', N'{{=field.name}}';{{=it.separator}}{{?}}\n{{~}}\n",
        "deleteTableTemplate": "",
        "rebuildTableTemplate": "",
        "createFieldTemplate": "",
        "updateFieldTemplate": "",
        "deleteFieldTemplate": "",
        "deleteIndexTemplate": "",
        "createIndexTemplate": "",
        "updateTableComment": ""
      },
      {
        "code": "PostgreSQL",
        "template": "DROP TABLE {{=it.entity.title}};\n$blankline\nCREATE TABLE {{=it.entity.title}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    {{=field.name}} {{=field.type}} {{= field.pk ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.entity.chnname,it.entity.remark,';') }}'",
        "createTableTemplate": "CREATE TABLE \"{{=it.entity.title}}\"(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    \"{{=field.name}}\" {{=field.type}}{{? field.defaultValue}} DEFAULT {{=field.defaultValue}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);{{=it.separator}}\n$blankline\n{{? it.entity.chnname || it.entity.remark}}COMMENT ON TABLE \"{{=it.entity.title}}\" IS {{? it.entity.remark}}'{{=it.entity.remark}}'{{??}}'{{=it.entity.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.chnname || field.remark}}COMMENT ON COLUMN \"{{=it.entity.title}}\".\"{{=field.name}}\" IS {{? field.remark}}'{{=field.remark}}'{{??}}'{{=field.chnname}}'{{?}};{{=it.separator}}{{?}}\n{{~}}",
        "deleteTableTemplate": "DROP TABLE \"{{=it.entity.title}}\";{{=it.separator}}/*SkipError*/",
        "rebuildTableTemplate": "create table \"PDMAN_UP_{{=it.oldEntity.title}}\"\nas select * from \"{{=it.oldEntity.title}}\";{{=it.separator}}\n$blankline\n\ndrop table \"{{=it.oldEntity.title}}\";{{=it.separator}}\n$blankline\n\nCREATE TABLE \"{{=it.newEntity.title}}\"(\n{{ pkList = [] ; }}\n{{~it.newEntity.fields:field:index}}\n    {{? field.pk }}{{ pkList.push(field.name) }}{{?}}\n    \"{{=field.name}}\" {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.chnname,field.remark,';')}}' {{= index < it.newEntity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n) COMMENT = '{{=it.func.join(it.newEntity.chnname,it.newEntity.remark,';') }}';{{=it.separator}}\n$blankline\n\n{{ sameCols = it.func.intersect(it.newEntity.fields,it.oldEntity.fields) ;}}\ninsert into {{=it.newEntity.title}}(\n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\n) \nselect \n{{~sameCols:field:index}}\n    {{=field.name}}{{? index<sameCols.length-1}},{{?}}\n{{~}}\nfrom PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\n$blankline\n\ndrop table \"PDMAN_UP_{{=it.oldEntity.title}};{{=it.separator}}\"",
        "createFieldTemplate": "ALTER TABLE \"{{=it.entity.title}}\" ADD COLUMN \"{{=it.field.name}}\" {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.pk}}PRIMARY KEY{{?}} {{? it.field.addAfter}}AFTER \"{{=it.field.addAfter}}\"{{?}};{{=it.separator}}\r\n{{? it.field.chnname}}COMMENT ON COLUMN \"{{=it.entity.title}}\".\"{{=it.field.name}}\" IS '{{=it.field.chnname}}'{{?}};{{=it.separator}}",
        "updateFieldTemplate": "ALTER TABLE \"{{=it.entity.title}}\" MODIFY COLUMN \"{{=it.field.name}}\" {{=it.field.type}} {{? it.field.notNull}}NOT NULL{{?}} {{? it.field.defaultValue}}DEFAULT {{? null==it.field.defaultValue}}NULL{{??}}'{{=it.field.defaultValue}}'{{?}}{{?}} {{? it.field.autoIncrement}}AUTO_INCREMENT{{?}} {{? it.field.chnname}}COMMENT '{{=it.field.chnname}}'{{?}};{{=it.separator}}",
        "deleteFieldTemplate": "ALTER TABLE \"{{=it.entity.title}}\" DROP \"{{=it.field.name}}\";{{=it.separator}}",
        "deleteIndexTemplate": "ALTER TABLE {{=it.entity.title}} DROP INDEX {{=it.index.name}};{{=it.separator}}",
        "createIndexTemplate": "ALTER TABLE {{=it.entity.title}} ADD {{? it.index.isUnique}}UNIQUE{{??}}INDEX{{?}} {{=it.index.name}}({{=it.func.join(...it.index.fields,',')}});{{=it.separator}}",
        "updateTableComment": "ALTER TABLE {{=it.entity.title}} COMMENT '{{=it.entity.chnname}}';{{=it.separator}}",
        "defaultDatabase": false,
        "fileShow": true
      },
      {
        "code": "JAVA",
        "template": "package group.rober.pdman.{{=it.module.name}}.entity;\n$blankline\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n$blankline\n\n/** {{=it.entity.chnname}} */\n@Table(name=\"{{=it.entity.title}}\")\npublic class {{=it.func.camel(it.entity.title,true) }} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    {{? field.pk }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.name,false)}} ;\n{{~}}\n$blankline\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.name,true)}}(){\n        return this.{{=it.func.camel(field.name,false)}};\n    }\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public void set{{=it.func.camel(field.name,true)}}({{=field.type}} {{= it.func.camel(field.name,false) }}){\n        this.{{=it.func.camel(field.name,false)}} = {{= it.func.camel(field.name,false) }};\n    }\n{{~}}\n}",
        "createTableTemplate": "package group.rober.pdman.{{=it.module.name}}.entity;\n$blankline\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n$blankline\n@Table(name=\"{{=it.entity.title}}\")\npublic class {{=it.func.camel(it.entity.title,true) }} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    {{? field.pk }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.name,false)}} ;\n{{~}}\n$blankline\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.name,true)}}(){\n        return this.{{=it.func.camel(field.name,false)}};\n    }\n    /** {{=it.func.join(field.chnname,field.remark,';')}} */\n    public void set{{=it.func.camel(field.name,true)}}({{=field.type}} {{= it.func.camel(field.name,false) }}){\n        this.{{=it.func.camel(field.name,false)}} = {{= it.func.camel(field.name,false) }};\n    }\n{{~}}\n}",
        "deleteTableTemplate": "",
        "rebuildTableTemplate": "",
        "createFieldTemplate": "",
        "updateFieldTemplate": "",
        "deleteFieldTemplate": "",
        "deleteIndexTemplate": "",
        "createIndexTemplate": "",
        "updateTableComment": ""
      }
    ]
  },
  "profile": {
    "defaultFields": [
      {
        "name": "CreationTime",
        "type": "DateTime",
        "remark": "",
        "chnname": "创建时间",
        "notNull": false
      },
      {
        "name": "CreatId",
        "type": "Integer",
        "remark": "",
        "chnname": "创建人编号",
        "notNull": false
      },
      {
        "name": "LastModifiTime",
        "type": "DateTime",
        "remark": "",
        "chnname": "最后修改时间"
      },
      {
        "name": "LastModifiId",
        "type": "Integer",
        "remark": "",
        "chnname": "最后修改人编号"
      },
      {
        "name": "IsDeleted",
        "type": "DingBoolean",
        "remark": "软删除，数据不会被物理删除",
        "chnname": "是否删除",
        "notNull": true,
        "defaultValue": ""
      },
      {
        "name": "Version",
        "type": "DingVersion",
        "remark": "处理并发问题",
        "chnname": "乐观锁"
      }
    ],
    "defaultFieldsType": "1",
    "javaConfig": {
      "JAVA_HOME": "C:\\Program Files\\Android\\jdk\\microsoft_dist_openjdk_1.8.0.25"
    },
    "sqlConfig": "/*SQL@Run*/",
    "dbs": [
      {
        "name": "TestGitDC(MySql)",
        "defaultDB": true,
        "properties": {
          "driver_class_name": "com.mysql.jdbc.Driver",
          "url": "jdbc:mysql://120.79.187.148:3306/TestGitDC?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC",
          "password": "bk3wLimdtNAS4T7A",
          "username": "TestGitDC"
        },
        "type": "MYSQL"
      }
    ],
    "wordTemplateConfig": ""
  }
}